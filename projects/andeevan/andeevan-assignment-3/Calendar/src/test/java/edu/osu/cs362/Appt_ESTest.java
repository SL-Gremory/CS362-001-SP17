/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 04:37:22 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
//import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest  {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(8, 8, 8, 8, 8, "mxOO:%q<3PqDx>;z", "mxOO:%q<3PqDx>;z");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t8/8/8 at 8:8am ,mxOO:%q<3PqDx>;z, mxOO:%q<3PqDx>;z\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(1, 0, (-571), 31, (-183), "", "%HGVdp0");
      assertEquals(-571, appt0.getStartDay());
      
      appt0.setStartDay(31);
      assertEquals(1, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(11, 59, 0, 0, 217, " at ", "");
      assertEquals(59, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(217, appt0.getStartYear());
      assertEquals(11, appt0.getStartHour());
      assertEquals(" at ", appt0.getTitle());
      assertEquals("", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(8, 8, 8, 8, 8, "Year", "Year");
      boolean boolean0 = appt0.getValid();
      assertEquals("Year", appt0.getDescription());
      assertTrue(boolean0);
      assertEquals(8, appt0.getStartMinute());
      assertEquals(8, appt0.getStartMonth());
      assertEquals(8, appt0.getStartDay());
      assertEquals(8, appt0.getStartHour());
      assertEquals("Year", appt0.getTitle());
      assertEquals(8, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 0, 11, 2716, " at ", "(eQ=:E}%S}gVy9\"z[");
      String string0 = appt0.getTitle();
      assertFalse(appt0.getValid());
      assertEquals(" at ", string0);
      assertEquals("(eQ=:E}%S}gVy9\"z[", appt0.getDescription());
      assertEquals(2716, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(11, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(0, (-2976), 0, 0, 0, "Zid`Qh+-", "Zid`Qh+-");
      int int0 = appt0.getStartYear();
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals(-2976, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals("Zid`Qh+-", appt0.getDescription());
      assertEquals("Zid`Qh+-", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 0, 11, 2716, " at ", "(eQ=:E}%S}gVy9\"z[");
      int int0 = appt0.getStartYear();
      assertEquals(0, appt0.getStartDay());
      assertEquals(" at ", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals("(eQ=:E}%S}gVy9\"z[", appt0.getDescription());
      assertEquals(2716, int0);
      assertEquals(11, appt0.getStartMonth());
      assertEquals(11, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "I4't$lU:\u0004M>d", "I4't$lU:\u0004M>d");
      appt0.setStartMonth(1880);
      int int0 = appt0.getStartMonth();
      assertEquals(1880, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt((-368), 83, 11, (-1), (-1837), "", "");
      int int0 = appt0.getStartMonth();
      assertEquals((-1), int0);
      assertEquals(11, appt0.getStartDay());
      assertEquals(-1837, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(83, appt0.getStartMinute());
      assertEquals(-368, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 0, 11, 2716, " at ", "(eQ=:E}%S}gVy9\"z[");
      int int0 = appt0.getStartMinute();
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals("(eQ=:E}%S}gVy9\"z[", appt0.getDescription());
      assertEquals(" at ", appt0.getTitle());
      assertEquals(11, int0);
      assertEquals(2716, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt((-495), (-24), (-24), (-495), (-24), "D?#$r^ohzHZ", "D?#$r^ohzHZ");
      int int0 = appt0.getStartMinute();
      assertEquals((-24), int0);
      assertEquals(-24, appt0.getStartYear());
      assertEquals("D?#$r^ohzHZ", appt0.getDescription());
      assertEquals(-495, appt0.getStartMonth());
      assertEquals(-495, appt0.getStartHour());
      assertEquals(-24, appt0.getStartDay());
      assertEquals("D?#$r^ohzHZ", appt0.getTitle());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 0, 11, 2716, " at ", "(eQ=:E}%S}gVy9\"z[");
      int int0 = appt0.getStartHour();
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartDay());
      assertEquals(" at ", appt0.getTitle());
      assertEquals(2716, appt0.getStartYear());
      assertEquals(11, appt0.getStartMinute());
      assertEquals(11, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals("(eQ=:E}%S}gVy9\"z[", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(1742, 1742, 1742, 2337, 2590, "eI9_", "eI9_");
      int int0 = appt0.getStartHour();
      assertEquals(1742, int0);
      assertEquals("eI9_", appt0.getTitle());
      assertEquals(2590, appt0.getStartYear());
      assertEquals("eI9_", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(2337, appt0.getStartMonth());
      assertEquals(1742, appt0.getStartDay());
      assertEquals(1742, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(2342, 2342, 0, 837, (-1), "pE&p41Nt|>", "pE&p41Nt|>");
      int int0 = appt0.getStartDay();
      assertEquals(837, appt0.getStartMonth());
      assertEquals("pE&p41Nt|>", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals("pE&p41Nt|>", appt0.getDescription());
      assertEquals(-1, appt0.getStartYear());
      assertEquals(2342, appt0.getStartMinute());
      assertEquals(2342, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 0, 11, 2716, " at ", "(eQ=:E}%S}gVy9\"z[");
      appt0.setStartDay(59);
      int int0 = appt0.getStartDay();
      assertEquals(59, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt(12, 2986, 2986, 2986, 12, "", "");
      appt0.getDescription();
      assertEquals(12, appt0.getStartYear());
      assertEquals(2986, appt0.getStartDay());
      assertEquals(2986, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(2986, appt0.getStartMonth());
      assertEquals(12, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt((-368), 83, 11, (-1), (-1837), "", "");
      appt0.setDescription("/[[FSCwIJj3Om");
      assertEquals("/[[FSCwIJj3Om", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, " J7&a$6A", " J7&a$6A");
      appt0.setTitle(" J7&a$6A");
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals(" J7&a$6A", appt0.getDescription());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(" J7&a$6A", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-495), (-24), (-24), (-495), (-24), "D?#$r^ohzHZ", "D?#$r^ohzHZ");
      int int0 = appt0.getStartDay();
      assertEquals((-24), int0);
      assertEquals(-24, appt0.getStartMinute());
      assertEquals("D?#$r^ohzHZ", appt0.getTitle());
      assertEquals(-24, appt0.getStartYear());
      assertEquals("D?#$r^ohzHZ", appt0.getDescription());
      assertEquals(-495, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-495, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 0, 11, 2716, " at ", "(eQ=:E}%S}gVy9\"z[");
      boolean boolean0 = appt0.getValid();
      assertEquals(0, appt0.getStartHour());
      assertEquals("(eQ=:E}%S}gVy9\"z[", appt0.getDescription());
      assertEquals(2716, appt0.getStartYear());
      assertEquals(0, appt0.getStartDay());
      assertEquals(" at ", appt0.getTitle());
      assertEquals(11, appt0.getStartMinute());
      assertFalse(boolean0);
      assertEquals(11, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-2128), (-1413), (-2128), (-2631), 0, ":", ":");
      int int0 = appt0.getStartHour();
      assertEquals(":", appt0.getDescription());
      assertEquals((-2128), int0);
      assertFalse(appt0.getValid());
      assertEquals(-2631, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertEquals(-2128, appt0.getStartDay());
      assertEquals(-1413, appt0.getStartMinute());
      assertEquals(":", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(1, 0, (-571), 31, (-183), "", "%HGVdp0");
      int int0 = appt0.getStartYear();
      assertEquals(0, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals((-183), int0);
      assertEquals("", appt0.getTitle());
      assertEquals("%HGVdp0", appt0.getDescription());
      assertEquals(1, appt0.getStartHour());
      assertEquals(31, appt0.getStartMonth());
      assertEquals(-571, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(1, 0, (-571), 31, (-183), "", "%HGVdp0");
      int int0 = appt0.getStartMinute();
      assertEquals(-571, appt0.getStartDay());
      assertEquals("%HGVdp0", appt0.getDescription());
      assertEquals(-183, appt0.getStartYear());
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
      assertEquals("", appt0.getTitle());
      assertEquals(1, appt0.getStartHour());
      assertEquals(31, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(1, 0, (-571), 31, (-183), "", "%HGVdp0");
      String string0 = appt0.getDescription();
      assertEquals("%HGVdp0", string0);
      assertEquals(1, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("", appt0.getTitle());
      assertEquals(-571, appt0.getStartDay());
      assertEquals(-183, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(31, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(3698, 3698, (-846), 0, 3698, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(-846, appt0.getStartDay());
      assertEquals(3698, appt0.getStartMinute());
      assertEquals(3698, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals(3698, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "", "");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/12/12 at 12:12pm ,, \n", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(8, 8, 8, 8, 8, "Year", "Year");
      appt0.setStartMonth(58);
      appt0.toString();
      assertEquals(58, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(1742, 1742, 1742, 2337, 2590, "eI9_", "eI9_");
      assertEquals("eI9_", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals(2590, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(1742, 1742, 1742, 2337, 2590, "eI9_", "eI9_");
      assertEquals("eI9_", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertEquals(1742, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(18, 18, (-584), 18, 18, "J", "J");
      appt0.setStartDay(18);
      assertEquals(18, appt0.getStartMonth());
      
      appt0.setStartMonth((-584));
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 2003, (-1394), (-1), "D:C<).'\";3+w_s2", "D:C<).'\";3+w_s2");
      assertEquals(-1, appt0.getStartYear());
      assertEquals(-1394, appt0.getStartMonth());
      assertEquals("D:C<).'\";3+w_s2", appt0.getDescription());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartHour());
      assertEquals("D:C<).'\";3+w_s2", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(2003, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(8, 8, 8, 8, 8, "Year", "Year");
      appt0.setStartMinute(3770);
      assertEquals(3770, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt((-2021), (-2021), (-2021), (-2021), (-2021), "", "");
      appt0.getTitle();
      assertEquals(-2021, appt0.getStartHour());
      assertEquals(-2021, appt0.getStartYear());
      assertEquals(-2021, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-2021, appt0.getStartMinute());
      assertEquals(-2021, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, (-1), "rE)}J/", "rE)}J/");
      appt0.setStartYear(12);
      assertEquals(12, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Appt appt0 = new Appt(1382, 0, (-1958), 0, 0, "am", "--%M-%D%z");
      appt0.setStartHour(104);
      assertEquals(104, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, (-1), "rE)}J/", "rE)}J/");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t11/11/-1 at 11:11am ,rE)}J/, rE)}J/\n", string0);
  }
}
